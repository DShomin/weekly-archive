name: Weekly Issue Creator

on:
  schedule:
    # - cron: "0 13 * * 0" # 매주 일요일 저녁 10시 (한국 시간 기준)
    - cron: "*/5 * * * *" # 매주 일요일 저녁 10시 (한국 시간 기준)

jobs:
  create-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch latest issue number
        id: fetch_latest_issue
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          LATEST_ISSUE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues?state=all&per_page=1" | jq -r '.[0].title')

          if [[ "$LATEST_ISSUE" =~ \- ([0-9]+)회차 ]]; then
            LAST_COUNT=${BASH_REMATCH[1]}
            NEXT_COUNT=$((LAST_COUNT + 1))
          else
            NEXT_COUNT=1
          fi

          echo "NEXT_COUNT=$NEXT_COUNT" >> $GITHUB_ENV

      - name: Generate Issue Title
        id: title
        run: |
          DATE=$(date -u +"%y%m%d")  # 실행 날짜 (UTC 기준)
          TITLE="[$DATE] Weekly archive - ${NEXT_COUNT}회차"
          echo "ISSUE_TITLE=$TITLE" >> $GITHUB_ENV

      - name: Create GitHub Issue
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          ISSUE_TITLE: ${{ env.ISSUE_TITLE }}
        run: |
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues \
            -d '{
              "title": "'"$ISSUE_TITLE"'",
              "body": "이번 주의 주요 업데이트 내용을 기록하세요.",
              "labels": ["weekly", "automation"]
            }'
